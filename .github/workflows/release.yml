name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Build & Release
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required to push and publish releases

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: üìÉ Get list of changed files
        id: changed_files
        run: |
          echo "CHANGED=$(git diff --name-only HEAD^ HEAD | tr '\n' ' ')" >> $GITHUB_OUTPUT
          echo "COUNT=$(git diff --name-only HEAD^ HEAD | wc -l)" >> $GITHUB_OUTPUT

      - name: üî¢ Determine version
        id: version
        run: |
          VERSION_FILE="manifest.json"

          if [ -f "$VERSION_FILE" ]; then
            VERSION=$(jq -r '.version' "$VERSION_FILE")
          else
            VERSION="1.00.000"
          fi

          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)

          COUNT="${{ steps.changed_files.outputs.COUNT }}"

          if [ "$COUNT" -ge 3 ]; then
            MAJOR=$((10#$MAJOR + 1))
            MINOR=00
            PATCH=000
          elif [ "$COUNT" -eq 2 ]; then
            MINOR=$((10#$MINOR + 1))
            PATCH=000
          elif [ "$COUNT" -eq 1 ]; then
            PATCH=$((10#$PATCH + 1))
          fi

          NEW_VERSION=$(printf "%d.%02d.%03d" "$MAJOR" "$MINOR" "$PATCH")
          REPO_NAME=$(basename $GITHUB_REPOSITORY)
          ZIP_NAME="${REPO_NAME}-${NEW_VERSION}.zip"

          echo "VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_OUTPUT
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_OUTPUT

      - name: üõ† Update manifest.json
        run: |
          VERSION="${{ steps.version.outputs.VERSION }}"
          echo "{ \"version\": \"$VERSION\" }" > manifest.json

      - name: üíæ Commit and push updated manifest.json
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add manifest.json
          git commit -m "Update manifest version to ${{ steps.version.outputs.VERSION }} [‚ñ∂Ô∏è]" || echo "Nothing to commit"
          git push origin main

      - name: üì¶ Create ZIP package (excluding README.md)
        run: |
          ZIP_NAME="${{ steps.version.outputs.ZIP_NAME }}"
          zip -r "$ZIP_NAME" . -x ".git/*" ".github/*" "README.md"

      - name: üöÄ Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ steps.version.outputs.VERSION }}"
          name: "${{ steps.version.outputs.REPO_NAME }} v${{ steps.version.outputs.VERSION }}"
          body: |
            ### Changelog
            Files changed in this release:

            ${{ steps.changed_files.outputs.CHANGED }}
          files: ${{ steps.version.outputs.ZIP_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
